    std::cout<<"   _____    _    _     ____     ____    _____    _____    _   _     _____  \n";
    std::cout<<"  / ____|  | |  | |   / __ \   / __ \  |_   _|  |_   _|  | \ | |   / ____| \n";
    std::cout<<" | (___    | |__| |  | |  | | | |  | |   | |      | |    |  \| |  | |  __  \n";
    std::cout<<"   \___ \  |  __  |  | |  | | | |  | |   | |      | |    | . ` |  | | |_ | \n";
    std::cout<<"  ____) |  | |  | |  | |__| | | |__| |   | |     _| |_   | |\  |  | |__| | \n";
    std::cout<<" |_____/   |_|  |_|   \____/   \____/    |_|    |_____|  |_| \_|   \_____| \n";
    std::cout<<"  ____     ____              _____    _____  \n";
    std::cout<<" |  _ \   / __ \     /\     |  __ \  |  __ \ \n";
    std::cout<<" | |_) | | |  | |   /  \    | |__) | | |  | |\n";
    std::cout<<" |  _ <  | |  | |  / /\ \   |  _  /  | |  | |\n";
    std::cout<<" | |_) | | |__| | / ____ \  | | \ \  | |__| |\n";
    std::cout<<" |____/   \____/ /_/    \_\ |_|  \_\ |_____/ \n";
    std::cout<<;


\std::cout << "Select where should Four-Masted ship start and in which direction should the rest of it head\n";
     std::cout << "Enter coordinates of the beginning of the ship: ";
       /*  switch (d){
             case 'N': return CheckIfAvaliable2MastedNorth(coord1, coord2, d);
             break;
             case 'E': return CheckIfAvaliable2MastedEast(coord1, coord2, d);
             break;
             case 'W': return CheckIfAvaliable2MastedWest(coord1, coord2, d);
             break;
             case 'S': return CheckIfAvaliable2MastedSouth(coord1, coord2, d);
             break;}*/





                 std::string Divide = this->ShipPosition;

                 char Divide1 = Divide[0];
                 char Divide2 = Divide[1];
                 char Divide3 = Divide[2];

                 int Divided1 = char(Divide1 - 49);
                 int Divided2 = char(Divide2 - 65);
                 int Divided3 = char(Divide3);

                     this->FirstCoordinate = Divided1;
                     this->SecondCoordinate = Divided2;
                     this->direction = Divided3;




                     void Board::PlacingShip(int coordinate1 , int coordinate2) {

                         playerGrid[coordinate1][coordinate2] = char(254);

                     }

                     bool Board::CheckIfAvaliable(int coord1,int coord2) {


                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                                 return true;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }




                     bool Board::CheckIfAvaliableFor2Masted(int coord1, int coord2, char d) {

                         if(d == 'N')
                             return CheckIfAvaliable2MastedNorth(coord1,coord2,d);
                         if(d == 'E')
                             return CheckIfAvaliable2MastedEast(coord1, coord2, d);
                         if(d == 'W')
                             return CheckIfAvaliable2MastedWest(coord1, coord2, d);
                         if(d == 'S')
                             return CheckIfAvaliable2MastedSouth(coord1, coord2, d);
                         return false;
                     }


                     bool Board::CheckIfAvaliable2MastedNorth(int coord1,int coord2, char direction) {


                         if (playerGrid[coord1][coord2] == char(247)){
                                     if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                         if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                                 if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                             if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                                 if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                                     if (playerGrid[coord1-2][coord2] == char(247)||playerGrid[coord1-2][coord2] != char(254)) {
                                                                         if (playerGrid[coord1-2][coord2-1] == char(247)||playerGrid[coord1-2][coord2-1] != char(254)) {
                                                                             if (playerGrid[coord1-2][coord2+1] == char(247)||playerGrid[coord1-2][coord2+1] != char(254)) {
                                                                                 return true;
                                                                             }
                                                                             else
                                                                                 return false;
                                                                         }else
                                                                             return false;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                         }

                     bool Board::CheckIfAvaliable2MastedEast(int coord1, int coord2, char direction) {


                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1][coord2+2] == char(247)||playerGrid[coord1][coord2+2] != char(254)) {
                                                                 if (playerGrid[coord1-1][coord2+2] == char(247)||playerGrid[coord1-1][coord2+2] != char(254)) {
                                                                     if (playerGrid[coord1+1][coord2+2] == char(247)||playerGrid[coord1+1][coord2+2] != char(254)) {
                                                                         return true;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }

                     bool Board::CheckIfAvaliable2MastedWest(int coord1, int coord2, char direction) {


                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1][coord2-2] == char(247)||playerGrid[coord1][coord2-2] != char(254)) {
                                                                 if (playerGrid[coord1-1][coord2-2] == char(247)||playerGrid[coord1-1][coord2-2] != char(254)) {
                                                                     if (playerGrid[coord1+1][coord2-2] == char(247)||playerGrid[coord1+1][coord2-2] != char(254)) {
                                                                         return true;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }

                     bool Board::CheckIfAvaliable2MastedSouth(int coord1, int coord2, char direction) {


                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1+2][coord2] == char(247)||playerGrid[coord1+2][coord2] != char(254)) {
                                                                 if (playerGrid[coord1+2][coord2-1] == char(247)||playerGrid[coord1+2][coord2-1] != char(254)) {
                                                                     if (playerGrid[coord1+2][coord2+1] == char(247)||playerGrid[coord1+2][coord2+1] != char(254)) {
                                                                         return true;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }

                     void Board::PlacingShipsFor2Masted(int coordinate1, int coordinate2, char d) {

                         switch (d) {

                             case 'N': PlacingShipsFor2MastedNorth(coordinate1,coordinate2,d); break;
                             case 'E': PlacingShipsFor2MastedEast(coordinate1,coordinate2,d); break;
                             case 'W': PlacingShipsFor2MastedWest(coordinate1,coordinate2,d); break;
                             case 'S': PlacingShipsFor2MastedSouth(coordinate1,coordinate2,d); break;
                         }
                     };

                     void Board::PlacingShipsFor2MastedNorth(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1-1][coordinate2] = char(254);

                     };
                     void Board::PlacingShipsFor2MastedEast(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1][coordinate2+1] = char(254);
                     };
                     void Board::PlacingShipsFor2MastedWest(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1][coordinate2-1] = char(254);
                     };
                     void Board::PlacingShipsFor2MastedSouth(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1+1][coordinate2] = char(254);
                     };





                     bool Board::CheckIfAvaliableFor3Masted(int coord1, int coord2, char d) {

                         if(d == 'N')
                             return CheckIfAvaliable3MastedNorth(coord1,coord2,d);
                         if(d == 'E')
                             return CheckIfAvaliable3MastedEast(coord1, coord2, d);
                         if(d == 'W')
                             return CheckIfAvaliable3MastedWest(coord1, coord2, d);
                         if(d == 'S')
                             return CheckIfAvaliable3MastedSouth(coord1, coord2, d);
                         return false;
                     }


                     bool Board::CheckIfAvaliable3MastedNorth(int coord1,int coord2, char direction) {
                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1-2][coord2] == char(247)||playerGrid[coord1-2][coord2] != char(254)) {
                                                                 if (playerGrid[coord1-2][coord2-1] == char(247)||playerGrid[coord1-2][coord2-1] != char(254)) {
                                                                     if (playerGrid[coord1-2][coord2+1] == char(247)||playerGrid[coord1-2][coord2+1] != char(254)) {
                                                                         if (playerGrid[coord1-3][coord2] == char(247)||playerGrid[coord1-3][coord2] != char(254)) {
                                                                             if (playerGrid[coord1-3][coord2+1] == char(247)||playerGrid[coord1-3][coord2+1] != char(254)) {
                                                                                 if (playerGrid[coord1-3][coord2-1] == char(247)||playerGrid[coord1-3][coord2-1] != char(254)) {
                                                                                     return true;
                                                                                 }else
                                                                                     return false;
                                                                             }else
                                                                                 return false;
                                                                         }else
                                                                             return false;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }

                     bool Board::CheckIfAvaliable3MastedEast(int coord1,int coord2, char direction) {
                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1+2][coord2] == char(247)||playerGrid[coord1+2][coord2] != char(254)) {
                                                                 if (playerGrid[coord1+2][coord2-1] == char(247)||playerGrid[coord1+2][coord2-1] != char(254)) {
                                                                     if (playerGrid[coord1+2][coord2+1] == char(247)||playerGrid[coord1+2][coord2+1] != char(254)) {
                                                                         if (playerGrid[coord1+1][coord2+3] == char(247)||playerGrid[coord1+1][coord2+3] != char(254)) {
                                                                             if (playerGrid[coord1-1][coord2+3] == char(247)||playerGrid[coord1-1][coord2+3] != char(254)) {
                                                                                 if (playerGrid[coord1][coord2+3] == char(247)||playerGrid[coord1][coord2+3] != char(254)) {
                                                                                     return true;
                                                                                 }else
                                                                                     return false;
                                                                             }else
                                                                                 return false;
                                                                         }else
                                                                             return false;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }

                     bool Board::CheckIfAvaliable3MastedWest(int coord1,int coord2, char direction) {
                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1+2][coord2] == char(247)||playerGrid[coord1+2][coord2] != char(254)) {
                                                                 if (playerGrid[coord1+2][coord2-1] == char(247)||playerGrid[coord1+2][coord2-1] != char(254)) {
                                                                     if (playerGrid[coord1+2][coord2+1] == char(247)||playerGrid[coord1+2][coord2+1] != char(254)) {
                                                                         if (playerGrid[coord1][coord2-3] == char(247)||playerGrid[coord1][coord2-3] != char(254)) {
                                                                             if (playerGrid[coord1+1][coord2-3] == char(247)||playerGrid[coord1+1][coord2-3] != char(254)) {
                                                                                 if (playerGrid[coord1-1][coord2-3] == char(247)||playerGrid[coord1-1][coord2-3] != char(254)) {
                                                                                     return true;
                                                                                 }else
                                                                                     return false;
                                                                             }else
                                                                                 return false;
                                                                         }else
                                                                             return false;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }

                     bool Board::CheckIfAvaliable3MastedSouth(int coord1,int coord2, char direction) {
                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1+2][coord2] == char(247)||playerGrid[coord1+2][coord2] != char(254)) {
                                                                 if (playerGrid[coord1+2][coord2-1] == char(247)||playerGrid[coord1+2][coord2-1] != char(254)) {
                                                                     if (playerGrid[coord1+2][coord2+1] == char(247)||playerGrid[coord1+2][coord2+1] != char(254)) {
                                                                         if (playerGrid[coord1+3][coord2] == char(247)||playerGrid[coord1+3][coord2] != char(254)) {
                                                                             if (playerGrid[coord1+3][coord2+1] == char(247)||playerGrid[coord1+3][coord2+1] != char(254)) {
                                                                                 if (playerGrid[coord1+3][coord2-1] == char(247)||playerGrid[coord1+3][coord2-1] != char(254)) {
                                                                                     return true;
                                                                                 }else
                                                                                     return false;
                                                                             }else
                                                                                 return false;
                                                                         }else
                                                                             return false;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }


                     void Board::PlacingShipsFor3Masted(int coordinate1, int coordinate2, char d) {

                         switch (d) {

                             case 'N': PlacingShipsFor3MastedNorth(coordinate1,coordinate2,d); break;
                             case 'E': PlacingShipsFor3MastedEast(coordinate1,coordinate2,d); break;
                             case 'W': PlacingShipsFor3MastedWest(coordinate1,coordinate2,d); break;
                             case 'S': PlacingShipsFor3MastedSouth(coordinate1,coordinate2,d); break;
                         }
                     };

                     void Board::PlacingShipsFor3MastedNorth(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1-1][coordinate2] = char(254);
                         playerGrid[coordinate1-2][coordinate2] = char(254);

                     };
                     void Board::PlacingShipsFor3MastedEast(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1][coordinate2+1] = char(254);
                         playerGrid[coordinate1][coordinate2+2] = char(254);
                     };
                     void Board::PlacingShipsFor3MastedWest(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1][coordinate2-1] = char(254);
                         playerGrid[coordinate1][coordinate2-2] = char(254);
                     };
                     void Board::PlacingShipsFor3MastedSouth(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1+1][coordinate2] = char(254);
                         playerGrid[coordinate1+2][coordinate2] = char(254);
                     };






                     bool Board::CheckIfAvaliableFor4Masted(int coord1, int coord2, char d) {

                         if(d == 'N')
                             return CheckIfAvaliable4MastedNorth(coord1,coord2,d);
                         if(d == 'E')
                             return CheckIfAvaliable4MastedEast(coord1, coord2, d);
                         if(d == 'W')
                             return CheckIfAvaliable4MastedWest(coord1, coord2, d);
                         if(d == 'S')
                             return CheckIfAvaliable4MastedSouth(coord1, coord2, d);
                         return false;
                     }

                     bool Board::CheckIfAvaliable4MastedNorth(int coord1,int coord2, char direction) {
                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1-2][coord2] == char(247)||playerGrid[coord1-2][coord2] != char(254)) {
                                                                 if (playerGrid[coord1-2][coord2-1] == char(247)||playerGrid[coord1-2][coord2-1] != char(254)) {
                                                                     if (playerGrid[coord1-2][coord2+1] == char(247)||playerGrid[coord1-2][coord2+1] != char(254)) {
                                                                         if (playerGrid[coord1-3][coord2] == char(247)||playerGrid[coord1-3][coord2] != char(254)) {
                                                                             if (playerGrid[coord1-3][coord2+1] == char(247)||playerGrid[coord1-3][coord2+1] != char(254)) {
                                                                                 if (playerGrid[coord1-3][coord2-1] == char(247)||playerGrid[coord1-3][coord2-1] != char(254)) {
                                                                                     if (playerGrid[coord1-4][coord2-1] == char(247)||playerGrid[coord1-4][coord2-1] != char(254)) {
                                                                                         if (playerGrid[coord1-4][coord2-1] == char(247)||playerGrid[coord1-4][coord2-1] != char(254)) {
                                                                                             if (playerGrid[coord1-4][coord2-1] == char(247)||playerGrid[coord1-4][coord2-1] != char(254)) {
                                                                                                 return true;
                                                                                             }else
                                                                                                 return false;
                                                                                         }else
                                                                                             return false;
                                                                                     }else
                                                                                         return false;
                                                                                 }else
                                                                                     return false;
                                                                             }else
                                                                                 return false;
                                                                         }else
                                                                             return false;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }

                     bool Board::CheckIfAvaliable4MastedEast(int coord1,int coord2, char direction) {
                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1+2][coord2] == char(247)||playerGrid[coord1+2][coord2] != char(254)) {
                                                                 if (playerGrid[coord1+2][coord2-1] == char(247)||playerGrid[coord1+2][coord2-1] != char(254)) {
                                                                     if (playerGrid[coord1+2][coord2+1] == char(247)||playerGrid[coord1+2][coord2+1] != char(254)) {
                                                                         if (playerGrid[coord1+1][coord2+3] == char(247)||playerGrid[coord1+1][coord2+3] != char(254)) {
                                                                             if (playerGrid[coord1-1][coord2+3] == char(247)||playerGrid[coord1-1][coord2+3] != char(254)) {
                                                                                 if (playerGrid[coord1][coord2+3] == char(247)||playerGrid[coord1][coord2+3] != char(254)) {
                                                                                     if (playerGrid[coord1][coord2+4] == char(247)||playerGrid[coord1][coord2+4] != char(254)) {
                                                                                         if (playerGrid[coord1][coord2+4] == char(247)||playerGrid[coord1][coord2+4] != char(254)) {
                                                                                             if (playerGrid[coord1][coord2+4] == char(247)||playerGrid[coord1][coord2+4] != char(254)) {
                                                                                                 return true;
                                                                                             }else
                                                                                                 return false;
                                                                                         }else
                                                                                             return false;
                                                                                     }else
                                                                                         return false;
                                                                                 }else
                                                                                     return false;
                                                                             }else
                                                                                 return false;
                                                                         }else
                                                                             return false;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }

                     bool Board::CheckIfAvaliable4MastedWest(int coord1,int coord2, char direction) {
                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1+2][coord2] == char(247)||playerGrid[coord1+2][coord2] != char(254)) {
                                                                 if (playerGrid[coord1+2][coord2-1] == char(247)||playerGrid[coord1+2][coord2-1] != char(254)) {
                                                                     if (playerGrid[coord1+2][coord2+1] == char(247)||playerGrid[coord1+2][coord2+1] != char(254)) {
                                                                         if (playerGrid[coord1][coord2-3] == char(247)||playerGrid[coord1][coord2-3] != char(254)) {
                                                                             if (playerGrid[coord1+1][coord2-3] == char(247)||playerGrid[coord1+1][coord2-3] != char(254)) {
                                                                                 if (playerGrid[coord1-1][coord2-3] == char(247)||playerGrid[coord1-1][coord2-3] != char(254)) {
                                                                                     if (playerGrid[coord1-1][coord2-4] == char(247)||playerGrid[coord1-1][coord2-4] != char(254)) {
                                                                                         if (playerGrid[coord1-1][coord2-4] == char(247)||playerGrid[coord1-1][coord2-4] != char(254)) {
                                                                                             if (playerGrid[coord1-1][coord2-4] == char(247)||playerGrid[coord1-1][coord2-4] != char(254)) {
                                                                                                 return true;
                                                                                             }else
                                                                                                 return false;
                                                                                         }else
                                                                                             return false;
                                                                                     }else
                                                                                         return false;
                                                                                 }else
                                                                                     return false;
                                                                             }else
                                                                                 return false;
                                                                         }else
                                                                             return false;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }

                     bool Board::CheckIfAvaliable4MastedSouth(int coord1,int coord2, char direction) {
                         if (playerGrid[coord1][coord2] == char(247)){
                             if (playerGrid[coord1][coord2-1] == char(247)||playerGrid[coord1][coord2-1] != char(254)) {
                                 if (playerGrid[coord1][coord2+1] == char(247)||playerGrid[coord1][coord2+1] != char(254)) {
                                     if (playerGrid[coord1+1][coord2] == char(247)||playerGrid[coord1+1][coord2] != char(254)) {
                                         if (playerGrid[coord1+1][coord2-1] == char(247)||playerGrid[coord1+1][coord2-1] != char(254)) {
                                             if (playerGrid[coord1+1][coord2+1] == char(247)||playerGrid[coord1+1][coord2+1] != char(254)) {
                                                 if (playerGrid[coord1-1][coord2-1] == char(247)||playerGrid[coord1-1][coord2-1] != char(254)) {
                                                     if (playerGrid[coord1-1][coord2+1] == char(247)||playerGrid[coord1-1][coord2+1] != char(254)) {
                                                         if (playerGrid[coord1-1][coord2] == char(247)||playerGrid[coord1-1][coord2] != char(254)) {
                                                             if (playerGrid[coord1+2][coord2] == char(247)||playerGrid[coord1+2][coord2] != char(254)) {
                                                                 if (playerGrid[coord1+2][coord2-1] == char(247)||playerGrid[coord1+2][coord2-1] != char(254)) {
                                                                     if (playerGrid[coord1+2][coord2+1] == char(247)||playerGrid[coord1+2][coord2+1] != char(254)) {
                                                                         if (playerGrid[coord1+3][coord2] == char(247)||playerGrid[coord1+3][coord2] != char(254)) {
                                                                             if (playerGrid[coord1+3][coord2+1] == char(247)||playerGrid[coord1+3][coord2+1] != char(254)) {
                                                                                 if (playerGrid[coord1+3][coord2-1] == char(247)||playerGrid[coord1+3][coord2-1] != char(254)) {
                                                                                     if (playerGrid[coord1+4][coord2-1] == char(247)||playerGrid[coord1+4][coord2-1] != char(254)) {
                                                                                         if (playerGrid[coord1+4][coord2-1] == char(247)||playerGrid[coord1+4][coord2-1] != char(254)) {
                                                                                             if (playerGrid[coord1+4][coord2-1] == char(247)||playerGrid[coord1+4][coord2-1] != char(254)) {
                                                                                                 return true;
                                                                                             }else
                                                                                                 return false;
                                                                                         }else
                                                                                             return false;
                                                                                     }else
                                                                                         return false;
                                                                                 }else
                                                                                     return false;
                                                                             }else
                                                                                 return false;
                                                                         }else
                                                                             return false;
                                                                     }else
                                                                         return false;
                                                                 }else
                                                                     return false;
                                                             }else
                                                                 return false;
                                                         }else
                                                             return false;
                                                     }else
                                                         return false;
                                                 }else
                                                     return false;
                                             }else
                                                 return false;
                                         }else
                                             return false;
                                     }else
                                         return false;
                                 }else
                                     return false;
                             }else
                                 return false;
                         }else
                             return false;
                     }

                     void Board::PlacingShipsFor4Masted(int coordinate1, int coordinate2, char d) {

                         switch (d) {

                             case 'N': PlacingShipsFor4MastedNorth(coordinate1,coordinate2,d); break;
                             case 'E': PlacingShipsFor4MastedEast(coordinate1,coordinate2,d); break;
                             case 'W': PlacingShipsFor4MastedWest(coordinate1,coordinate2,d); break;
                             case 'S': PlacingShipsFor4MastedSouth(coordinate1,coordinate2,d); break;
                         }
                     };

                     void Board::PlacingShipsFor4MastedNorth(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1-1][coordinate2] = char(254);
                         playerGrid[coordinate1-2][coordinate2] = char(254);
                         playerGrid[coordinate1-3][coordinate2] = char(254);

                     };
                     void Board::PlacingShipsFor4MastedEast(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1][coordinate2+1] = char(254);
                         playerGrid[coordinate1][coordinate2+2] = char(254);
                         playerGrid[coordinate1][coordinate2+3] = char(254);
                     };
                     void Board::PlacingShipsFor4MastedWest(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1][coordinate2-1] = char(254);
                         playerGrid[coordinate1][coordinate2-2] = char(254);
                         playerGrid[coordinate1][coordinate2-3] = char(254);
                     };
                     void Board::PlacingShipsFor4MastedSouth(int coordinate1, int coordinate2, char d) {
                         playerGrid[coordinate1][coordinate2] = char(254);
                         playerGrid[coordinate1+1][coordinate2] = char(254);
                         playerGrid[coordinate1+2][coordinate2] = char(254);
                         playerGrid[coordinate1+3][coordinate2] = char(254);
                     };


                     void PlacingShip(int a, int b);
                         void PlacingShipsFor2Masted(int a, int b, char direction);
                         void PlacingShipsFor2MastedNorth(int a, int b, char direction);
                         void PlacingShipsFor2MastedSouth(int a, int b, char direction);
                         void PlacingShipsFor2MastedEast(int a, int b, char direction);
                         void PlacingShipsFor2MastedWest(int a, int b, char direction);

                         bool CheckIfAvaliable(int a, int b);
                         bool CheckIfAvaliableFor2Masted(int a, int b, char direction);
                         bool CheckIfAvaliable2MastedNorth(int a, int b, char direction);
                         bool CheckIfAvaliable2MastedEast(int a, int b, char direction);
                         bool CheckIfAvaliable2MastedWest(int a, int b, char direction);
                         bool CheckIfAvaliable2MastedSouth(int a, int b, char direction);

                         bool CheckIfAvaliableFor3Masted(int a, int b, char direction);
                         bool CheckIfAvaliable3MastedNorth(int a, int b, char direction);
                         bool CheckIfAvaliable3MastedEast(int a, int b, char direction);
                         bool CheckIfAvaliable3MastedWest(int a, int b, char direction);
                         bool CheckIfAvaliable3MastedSouth(int a, int b, char direction);
                          void PlacingShipsFor3Masted(int a, int b, char direction);

                             void PlacingShipsFor3MastedNorth(int a, int b, char direction);
                             void PlacingShipsFor3MastedEast(int a, int b, char direction);
                             void PlacingShipsFor3MastedWest(int a, int b, char direction);
                             void PlacingShipsFor3MastedSouth(int a, int b, char direction);

                             bool CheckIfAvaliableFor4Masted(int a, int b, char direction);
                             bool CheckIfAvaliable4MastedNorth(int a, int b, char direction);
                             bool CheckIfAvaliable4MastedEast(int a, int b, char direction);
                             bool CheckIfAvaliable4MastedWest(int a, int b, char direction);
                             bool CheckIfAvaliable4MastedSouth(int a, int b, char direction);

                             void PlacingShipsFor4Masted(int a, int b, char direction);

                             void PlacingShipsFor4MastedNorth(int a, int b, char direction);
                             void PlacingShipsFor4MastedEast(int a, int b, char direction);
                             void PlacingShipsFor4MastedWest(int a, int b, char direction);
                             void PlacingShipsFor4MastedSouth(int a, int b, char direction);